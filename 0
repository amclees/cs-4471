## Redundancy Continued

### Hot Standby Router Protocol (HSRP)

HSRP defines a standby group

Each standby group has an active router, standby router(s), a virtual router,
and any other routers in the subnet

The problem with HSRP is that there is only ever one active router, making it
not very cost-effective

We can configure a virtual IP address and a virtual MAC address

The HSRP virtual MAC address starts with 00:00:0c (an ID assigned to Cisco)

07.ac is the HSRP protocol's ID

The last 8 bits are the HSRP group number, which is configurable

4 timers in HSRP

* Hello timer (timer before hello is sent)
* Hold timer (timer before active is considered offline)
* Active timer
* Standby timer

3 roles

* Virtual router - where packets are sent
* Active router - serves requests to the virtual router
* Standby router - stands by

To set as a standby router, use the commands:

```
# standby 1 ip <virtual router IP address>
# standby 1 name <name>
# standby 1 priority <priority>
```

To verify the commands worked, run `sh standby`.

## Network Address Translation (NAT)

Redundant concept deprecated by IPv6 that is still around because 128-bits are
too scary. Somehow, NAT is seen as less scary (though it should be feared more)

NAT runs on an internet-facing router that serves all traffic to and from the
network which is having its addresses translated. TCP and UDP ports are used
to map traffic to a particular host

Three types of NAT: static (one-to-one, no one uses it), dynamic (like static,
but juggles public addresses, no one uses it), PAT (everyone afraid of IPv6
uses it)

ICMP has a 16-bit identifier field used for ICMP PAT (IAT?). This parallels the size
of the TCP and UDP port fields

### Cisco Commands

#### Static  NAT

```
# ip nat inside source static <internal IP address> <external IP address>
```

There should be interfaces matching each of these addresses

#### Dynamic NAT

```
# ip nat pool <name> <external lower bound> <external higher bound> netmask <netmask>
# ip nat inside source list <ACL #> pool <name>
```

The second command here grants addresses matching ACL 1 IP addresses from the
pool

#### PAT

```
# ip nat pool <name> <external lower bound> <external upper bound>
# ip nat inside source list <ACL #> pool <name> overload
```

Just like dynamic NAT, but with `overload`

#### Show config

```
# sh ip nat translation
```

## IPv6

Why do we need NAT? The answer is "we don't, if we have IPv6."

2**32 is about 4 billion

2**128 is about 320 trillion trillion trillion

"Where is my shoes, right. It will come out"

Shoes and tables will be connected to the internet

NDN - Name data networking, no need for IP

Why do we need a new notation for IPv6?

`2001:db8::/32`

`32.1.219.128.0.0.0.0.0.0.0.0.0.0.0.0/32`

When specifying ports, IPv6 addresses are surrounded in brackets

For example, the loopback address is `::1`. A local web server on port 3000
could be accessed with the URL `http://[::1]:3000`



